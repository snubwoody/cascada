name: CI
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
concurrency:
  group: ci-${{github.ref}}-${{github.workflow}}
  cancel-in-progress: true
env:
  CARGO_TERM_COLOR: always
jobs:
# TODO: add after first release
#  semver:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#      - name: Check semver
#        uses: obi1kenobi/cargo-semver-checks-action@v2
#        with:
#          exclude: cascada
  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Cache cargo
        uses: actions/cache@v4
        with:
          key: ${{runner.os}}-cargo-${{hashFiles('Cargo.lock')}}
          path: |
            ~/.cargo
            target
          restore-keys: ${{runner.os}}-cargo-
      - name: Run cargo clippy
        run: cargo clippy --all-targets --all-features -- -D warnings
  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check formatting
        run: cargo fmt --check
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ 'ubuntu-latest','macos-latest','windows-latest' ]
    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          key: ${{runner.os}}-cargo-${{hashFiles('Cargo.lock')}}
          path: |
            target/
            ~/.cargo
          restore-keys: ${{runner.os}}-cargo-
      - uses: taiki-e/install-action@cargo-nextest
      - name: Run tests
        run: cargo nextest run --locked
  doc-tests:
    strategy:
      fail-fast: false
      matrix:
        os: [ 'ubuntu-latest','macos-latest','windows-latest' ]
    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          key: ${{runner.os}}-cargo-${{hashFiles('Cargo.lock')}}
          path: |
            ~/.cargo
            target/
          restore-keys: ${{runner.os}}-cargo-
      - name: Run doc tests
        run: cargo test --doc --locked
  all-systems-pass:
    runs-on: ubuntu-latest
    needs:
      - clippy
      - doc-tests
      - test
      - format
    steps:
      - uses: actions/checkout@v4
      - run: echo All good